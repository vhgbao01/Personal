{"version":"2.0.122.1","settings":{"blur":0,"brightness":100,"contrast":100,"grayscale":0,"huerotate":0,"invert":0,"saturate":100,"sepia":0,"applyvideofilters":false,"backgroundcolor":"#000000","backgroundopacity":85,"blackbars":false,"blockautoplay":true,"blockhfrformats":false,"blockwebmformats":false,"boostvolume":false,"cinemamode":false,"cinemamodewideplayer":true,"controlbar":{"active":false,"autohide":false,"centered":true,"position":"fixed"},"controls":["loop","volume-booster","screenshot"],"controlsvisible":true,"controlspeed":true,"controlspeedmousebutton":false,"controlvolume":false,"controlvolumemousebutton":false,"convertshorts":false,"customcolors":{"--dimmer-text":"#cccccc","--hover-background":"#232323","--main-background":"#111111","--main-color":"#00adee","--main-text":"#eff0f1","--second-background":"#181818","--shadow":"#000000"},"customcssrules":"","customscript":"// ==UserScript==\n// @name         YouTube去广告 YouTube AD Blocker\n// @name:zh-CN   YouTube去广告\n// @name:zh-TW   YouTube去廣告\n// @name:zh-HK   YouTube去廣告\n// @name:zh-MO   YouTube去廣告\n// @namespace    https://github.com/iamfugui/YouTubeADB\n// @version      6.01\n// @description         这是一个去除YouTube广告的脚本，轻量且高效，它能丝滑的去除界面广告和视频广告，包括6s广告。This is a script that removes ads on YouTube, it's lightweight and efficient, capable of smoothly removing interface and video ads, including 6s ads.\n// @description:zh-CN   这是一个去除YouTube广告的脚本，轻量且高效，它能丝滑的去除界面广告和视频广告，包括6s广告。\n// @description:zh-TW   這是一個去除YouTube廣告的腳本，輕量且高效，它能絲滑地去除界面廣告和視頻廣告，包括6s廣告。\n// @description:zh-HK   這是一個去除YouTube廣告的腳本，輕量且高效，它能絲滑地去除界面廣告和視頻廣告，包括6s廣告。\n// @description:zh-MO   這是一個去除YouTube廣告的腳本，輕量且高效，它能絲滑地去除界面廣告和視頻廣告，包括6s廣告。\n// @author       iamfugui\n// @match        *://*.youtube.com/*\n// @exclude      *://accounts.youtube.com/*\n// @exclude      *://www.youtube.com/live_chat_replay*\n// @exclude      *://www.youtube.com/persist_identity*\n// @icon         https://www.google.com/s2/favicons?sz=64&domain=YouTube.com\n// @grant        none\n// @license MIT\n// @downloadURL https://update.greasyfork.org/scripts/459541/YouTube%E5%8E%BB%E5%B9%BF%E5%91%8A.user.js\n// @updateURL https://update.greasyfork.org/scripts/459541/YouTube%E5%8E%BB%E5%B9%BF%E5%91%8A.meta.js\n// ==/UserScript==\n(function() {\n    `use strict`;\n\n    //界面广告选择器\n    const cssSeletorArr = [\n        `#masthead-ad`,//首页顶部横幅广告.\n        `ytd-rich-item-renderer.style-scope.ytd-rich-grid-row #content:has(.ytd-display-ad-renderer)`,//首页视频排版广告.\n        `.video-ads.ytp-ad-module`,//播放器底部广告.\n        `tp-yt-paper-dialog:has(yt-mealbar-promo-renderer)`,//播放页会员促销广告.\n        `ytd-engagement-panel-section-list-renderer[target-id=\"engagement-panel-ads\"]`,//播放页右上方推荐广告.\n        `#related #player-ads`,//播放页评论区右侧推广广告.\n        `#related ytd-ad-slot-renderer`,//播放页评论区右侧视频排版广告.\n        `ytd-ad-slot-renderer`,//搜索页广告.\n        `yt-mealbar-promo-renderer`,//播放页会员推荐广告.\n        `ad-slot-renderer`,//M播放页第三方推荐广告\n        `ytm-companion-ad-renderer`,//M可跳过的视频广告链接处\n    ];\n\n    window.dev=false;//开发使用\n\n    /**\n    * 将标准时间格式化\n    * @param {Date} time 标准时间\n    * @param {String} format 格式\n    * @return {String}\n    */\n    function moment(time) {\n        // 获取年⽉⽇时分秒\n        let y = time.getFullYear()\n        let m = (time.getMonth() + 1).toString().padStart(2, `0`)\n        let d = time.getDate().toString().padStart(2, `0`)\n        let h = time.getHours().toString().padStart(2, `0`)\n        let min = time.getMinutes().toString().padStart(2, `0`)\n        let s = time.getSeconds().toString().padStart(2, `0`)\n        return `${y}-${m}-${d} ${h}:${min}:${s}`\n    }\n\n    /**\n    * 输出信息\n    * @param {String} msg 信息\n    * @return {undefined}\n    */\n    function log(msg) {\n        if(!window.dev){\n            return false;\n        }\n        console.log(window.location.href);\n        console.log(`${moment(new Date())}  ${msg}`);\n    }\n\n    /**\n    * 设置运行标志\n    * @param {String} name\n    * @return {undefined}\n    */\n    function setRunFlag(name){\n        let style = document.createElement(`style`);\n        style.id = name;\n        (document.querySelector(`head`) || document.querySelector(`body`)).appendChild(style);//将节点附加到HTML.\n    }\n\n    /**\n    * 获取运行标志\n    * @param {String} name\n    * @return {undefined|Element}\n    */\n    function getRunFlag(name){\n        return document.getElementById(name);\n    }\n\n    /**\n    * 检查是否设置了运行标志\n    * @param {String} name\n    * @return {Boolean}\n    */\n    function checkRunFlag(name){\n        if(getRunFlag(name)){\n            return true;\n        }else{\n            setRunFlag(name)\n            return false;\n        }\n    }\n\n    /**\n    * 生成去除广告的css元素style并附加到HTML节点上\n    * @param {String} styles 样式文本\n    * @return {undefined}\n    */\n    function generateRemoveADHTMLElement(id) {\n        //如果已经设置过,退出.\n        if (checkRunFlag(id)) {\n            log(`屏蔽页面广告节点已生成`);\n            return false\n        }\n\n        //设置移除广告样式.\n        let style = document.createElement(`style`);//创建style元素.\n        (document.querySelector(`head`) || document.querySelector(`body`)).appendChild(style);//将节点附加到HTML.\n        style.appendChild(document.createTextNode(generateRemoveADCssText(cssSeletorArr)));//附加样式节点到元素节点.\n        log(`生成屏蔽页面广告节点成功`);\n    }\n\n    /**\n    * 生成去除广告的css文本\n    * @param {Array} cssSeletorArr 待设置css选择器数组\n    * @return {String}\n    */\n    function generateRemoveADCssText(cssSeletorArr){\n        cssSeletorArr.forEach((seletor,index)=>{\n            cssSeletorArr[index]=`${seletor}{display:none!important}`;//遍历并设置样式.\n        });\n        return cssSeletorArr.join(` `);//拼接成字符串.\n    }\n\n    /**\n    * 触摸事件\n    * @return {undefined}\n    */\n    function nativeTouch(){\n        // 创建 Touch 对象\n        let touch = new Touch({\n            identifier: Date.now(),\n            target: this,\n            clientX: 12,\n            clientY: 34,\n            radiusX: 56,\n            radiusY: 78,\n            rotationAngle: 0,\n            force: 1\n        });\n\n        // 创建 TouchEvent 对象\n        let touchStartEvent = new TouchEvent(`touchstart`, {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            touches: [touch],\n            targetTouches: [touch],\n            changedTouches: [touch]\n        });\n\n        // 分派 touchstart 事件到目标元素\n        this.dispatchEvent(touchStartEvent);\n\n        // 创建 TouchEvent 对象\n        let touchEndEvent = new TouchEvent(`touchend`, {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n            touches: [],\n            targetTouches: [],\n            changedTouches: [touch]\n        });\n\n        // 分派 touchend 事件到目标元素\n        this.dispatchEvent(touchEndEvent);\n    }\n\n    /**\n    * 跳过广告\n    * @return {undefined}\n    */\n    function skipAd(mutationsList, observer) {\n        let video = document.querySelector(`.ad-showing video`) || document.querySelector(`video`);//获取视频节点\n        let skipButton = document.querySelector(`.ytp-ad-skip-button`) || document.querySelector(`.ytp-ad-skip-button-modern`);\n        let shortAdMsg = document.querySelector(`.video-ads.ytp-ad-module .ytp-ad-player-overlay`);\n\n        if(skipButton){\n            //移动端静音有bug\n            if( window.location.href.indexOf(\"https://m.youtube.com/\") === -1){\n                video.muted = true;\n            }\n            if(video.currentTime>0.5){\n                video.currentTime = video.duration;//强制\n                log(`特殊账号跳过按钮广告~~~~~~~~~~~~~`);\n                return;\n            }\n            skipButton.click();//PC\n            nativeTouch.call(skipButton);//Phone\n            log(`按钮跳过广告~~~~~~~~~~~~~`);\n        }else if(shortAdMsg){\n            video.currentTime = video.duration;\n            log(`强制结束了该广告~~~~~~~~~~~~~`);\n        }else{\n            log(`######广告不存在######`);\n        }\n\n    }\n\n    /**\n    * 去除播放中的广告\n    * @return {undefined}\n    */\n    function removePlayerAD(id){\n        //如果已经在运行,退出.\n        if (checkRunFlag(id)) {\n            log(`去除播放中的广告功能已在运行`);\n            return false\n        }\n        let observer;//监听器\n        let timerID;//定时器\n\n        //开始监听\n        function startObserve(){\n            //广告节点监听\n            const targetNode = document.querySelector(`.video-ads.ytp-ad-module`);\n            if(!targetNode){\n                log(`正在寻找待监听的目标节点`);\n                return false;\n            }\n            //监听视频中的广告并处理\n            const config = {childList: true, subtree: true };// 监听目标节点本身与子树下节点的变动\n            observer = new MutationObserver(skipAd);// 创建一个观察器实例并设置处理广告的回调函数\n            observer.observe(targetNode, config);// 以上述配置开始观察广告节点\n            timerID=setInterval(skipAd, 500);//漏网鱼\n        }\n\n        //轮询任务\n        let startObserveID = setInterval(()=>{\n            if(observer && timerID){\n                clearInterval(startObserveID);\n            }else{\n                startObserve();\n            }\n        },16);\n\n        log(`运行去除播放中的广告功能成功`);\n    }\n\n    /**\n    * main函数\n    */\n    function main(){\n        generateRemoveADHTMLElement(`removeADHTMLElement`);//移除界面中的广告.\n        removePlayerAD(`removePlayerAD`);//移除播放中的广告.\n    }\n\n    if (document.readyState === `loading`) {\n        log(`YouTube去广告脚本即将调用:`);\n        document.addEventListener(`DOMContentLoaded`, main);// 此时加载尚未完成\n    } else {\n        log(`YouTube去广告脚本快速调用:`);\n        main();// 此时`DOMContentLoaded` 已经被触发\n    }\n\n})();","customtheme":false,"darktheme":true,"date":0,"defaultvolume":true,"disableautoplay":false,"executescript":true,"expanddescription":false,"filter":"none","hidecardsendscreens":true,"hidechat":false,"hidecomments":false,"hiderelated":false,"hideshorts":false,"ignoreplaylists":true,"ignorepopupplayer":true,"localecode":"en_US","localedir":"ltr","message":false,"miniplayer":true,"miniplayerposition":"_bottom-right","miniplayersize":"_400x225","newestcomments":false,"overridespeeds":false,"pauseforegroundtab":false,"pausevideos":false,"popuplayersize":"640x360","qualityembeds":"large","qualityembedsfullscreen":"hd1080","qualityplaylists":"tiny","qualityplaylistsfullscreen":"hd720","qualityvideos":"large","qualityvideosfullscreen":"hd1080","reload":false,"reversemousewheeldirection":false,"selectquality":true,"selectqualityfullscreenoff":true,"selectqualityfullscreenon":true,"speed":1,"speedvariation":0.1,"stopvideos":false,"theatermode":false,"theme":"youtube-deep-dark","themevariant":"youtube-deep-dark-firefox-quantum-dark.css","update":0,"volume":50,"volumemultiplier":3,"volumevariation":5,"wideplayer":false,"wideplayerviewport":false}}
